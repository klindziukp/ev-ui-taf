package com.klindziuk.taf.test;

import com.klindziuk.taf.common.annotation.SkipOnProduction;
import com.klindziuk.taf.common.config.Group;
import com.klindziuk.taf.common.constant.TimeConstant;
import com.klindziuk.taf.common.log.Info;
import com.klindziuk.taf.common.util.StringUtil;
import com.klindziuk.taf.po.block.navigation.Navigation;
import com.klindziuk.taf.po.block.navigation.main.item.AboutItem;
import com.klindziuk.taf.po.page.about.ContactUsPage;
import com.klindziuk.taf.po.page.MainPage;
import com.klindziuk.taf.po.page.about.SupportPage;
import com.klindziuk.taf.po.page.about.ThanksAMillionPage;
import io.qameta.allure.Feature;
import io.qameta.allure.Issue;
import io.qameta.allure.Severity;
import io.qameta.allure.SeverityLevel;
import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class ContactUsTest extends BaseTest {

    private MainPage mainPage;
    private Navigation navigation;
    private ContactUsPage contactUsPage;
    private SupportPage supportPage;
    private ThanksAMillionPage thanksAMillionPage;

    @BeforeMethod(alwaysRun = true)
    public void setUp() {
        mainPage = new MainPage();
        navigation = new Navigation();
        contactUsPage = new ContactUsPage();
        supportPage = new SupportPage();
        thanksAMillionPage = new ThanksAMillionPage();
    }

    @Test(groups = { Group.SMOKE })
    @Feature("Contact Us")
    @Severity(SeverityLevel.CRITICAL)
    @SkipOnProduction(reason = "Unable to pass 'reCaptcha' on production")
    @Issue("JS issue for 'standalone-chrome:3.141.59-zinc' container")
    public void contactUsTest() {

        Info.step("Open Home page");
        mainPage.loadPage();
        Info.verify("Verify that 'Home page' is opened");
        Assert.assertTrue(mainPage.isPageOpened(TimeConstant.SECONDS_5), "'About' field is not visible.");

        Info.step("Load 'Contact us' page");
        navigation.mainNavMenu().about().openSubMenu(AboutItem.CONTACT_US);
        Info.verify("Verify that 'Contact us' page is opened");
        Assert.assertTrue(contactUsPage.isPageOpened(TimeConstant.SECONDS_5), "'Contact Us' page is not opened.");

        Info.step("Load 'Support' page");
        contactUsPage.openSupportPage();
        Info.verify("Verify that 'Support' page is opened");
        Assert.assertTrue(supportPage.isPageOpened(TimeConstant.SECONDS_5), "'Support' page is not opened.");

        Info.step("Send 'Help' message");
        sendHelpMessage();
        Info.verify("Verify that 'Thanks a million' page is opened");
        Assert.assertTrue(thanksAMillionPage.isPageOpened(TimeConstant.SECONDS_5), "'Thanks a million' page is not opened.");
    }

    private void sendHelpMessage() {
        contactUsPage.contactUsForm()
                .fillName(StringUtil.makeStringUnique("First"), StringUtil.makeStringUnique("Last"))
                .fillEmail("mail.dfghaf@mailosaur.io")
                .fillPostalInfo("220090","Minsk", "Belarus")
                .fillMessage("This is a test message generated by automated script.")
                .submitForm();
    }
}
